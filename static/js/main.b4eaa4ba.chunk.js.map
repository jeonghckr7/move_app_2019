{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","to","pathname","state","className","src","alt","slice","map","genre","index","key","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","props","console","log","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"yXAgDeA,MA3Cf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/C,OACI,kBAAC,IAAD,CACIC,GAAI,CACAC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACHR,KACAC,OACAC,QACAC,UACAC,SACAC,YAKR,yBAAKI,UAAU,SACX,yBAAKC,IAAON,EAAQO,IAAKT,EAAOA,MAAOA,IACvC,yBAAKO,UAAU,eACX,wBAAIA,UAAU,gBAAgBP,GAC9B,wBAAIO,UAAU,eAAeR,GAC7B,uBAAGQ,UAAU,kBAAkBN,EAAQS,MAAM,EAAG,KAAhD,OACA,wBAAIH,UAAU,iBACTJ,EAAOQ,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAON,UAAU,iBAAiBK,WC8BxDG,G,iNA7CXT,MAAQ,CACJU,WAAW,EACXC,OAAQ,I,EAEZC,U,sBAAY,8BAAAC,EAAA,sEAKEC,IAAMC,IAAI,4DALZ,gBAGQJ,EAHR,EAEJK,KACIA,KAAQL,OAIhB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAP3B,2C,mFAURQ,KAAKN,c,+BAEE,IAAD,EACwBM,KAAKlB,MAA3BU,EADF,EACEA,UAAWC,EADb,EACaA,OAEnB,OACI,6BAASV,UAAU,aACdS,EACG,yBAAKT,UAAU,UACX,0BAAMA,UAAU,gBAAhB,iBAGJ,yBAAKA,UAAU,UACVU,EAAON,KAAI,SAACc,GAAD,OACR,kBAAC,EAAD,CACIX,IAAKW,EAAM3B,GACXA,GAAI2B,EAAM3B,GACVC,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAMC,mBACdvB,OAAQsB,EAAMtB,kB,GApC3BwB,IAAMC,Y,MCGVC,MAbf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAER,yBAAKvB,UAAU,oBACX,qEAGA,yDCSG0B,E,4LAhBW,IAAD,EACaT,KAAKM,MAA3BI,EADS,EACTA,SAAUC,EADD,EACCA,aACKC,IAAnBF,EAAS5B,OACT6B,EAAQE,KAAK,O,+BAGX,IACEH,EAAaV,KAAKM,MAAlBI,SACR,OAAGA,EAAS5B,MACD,8BAAO4B,EAAS5B,MAAMN,OAEtB,S,GAZG2B,IAAMC,W,MCYbU,MAVf,WACI,OACI,yBAAK/B,UAAU,OACX,kBAAC,IAAD,CAAMH,GAAG,IAAIG,UAAU,YAAvB,QACA,kBAAC,IAAD,CAAMH,GAAG,SAASG,UAAU,YAA5B,WCUGgC,MAXf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW3B,IACxC,kBAAC,IAAD,CAAOyB,KAAK,UAAUE,UAAWb,IACjC,kBAAC,IAAD,CAAOW,KAAK,aAAaE,UAAWT,MCNhDU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,a","file":"static/js/main.b4eaa4ba.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n    return (\r\n        <Link\r\n            to={{\r\n                pathname: `/movie/${id}`,\r\n                state: {\r\n                    id,\r\n                    year,\r\n                    title,\r\n                    summary,\r\n                    poster,\r\n                    genres\r\n                }\r\n            }}\r\n        >\r\n\r\n            <div className=\"movie\">\r\n                <img src = {poster} alt={title} title={title} />\r\n                <div className=\"movie__data\">\r\n                    <h3 className=\"movie__title\">{title}</h3>\r\n                    <h5 className=\"movie__year\">{year}</h5>\r\n                    <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n                    <ul className=\"movie__genres\">\r\n                        {genres.map((genre, index) => (\r\n                            <li key={index} className=\"genres__genre\">{genre}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\n//# import logo from './logo.svg';\r\n//import './App.css';\r\n//import Potato from \"./Potato\";\r\n//import PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n// const friends = [\"dal\",\"mark\",\"lyan\"];\r\n// friends -> (4) [\"dal\", \"mark\"]\r\n// friends.map(function(friends) {\r\n// return friends + \" 하트\"; })\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        isLoading: true,\r\n        movies: []\r\n    };\r\n    getMovies = async () => {\r\n        const {\r\n            data: {\r\n                data :{ movies }\r\n            }\r\n        } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n        // console.log(movies);\r\n        this.setState({ movies, isLoading: false });\r\n    };\r\n    componentDidMount() {\r\n        this.getMovies();\r\n    }\r\n    render () {\r\n        const { isLoading, movies } = this.state;\r\n      \r\n        return (\r\n            <section className=\"container\">\r\n                {isLoading ? (\r\n                    <div className=\"loader\">\r\n                        <span className=\"loader__text\">\"Loading...\"</span>\r\n                    </div> \r\n                    ) : ( \r\n                    <div className=\"movies\">\r\n                        {movies.map((movie) => \r\n                            <Movie \r\n                                key={movie.id}\r\n                                id={movie.id} \r\n                                year={movie.year} \r\n                                title={movie.title} \r\n                                summary={movie.summary} \r\n                                poster={movie.medium_cover_image}\r\n                                genres={movie.genres}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    )}\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n    console.log(props);\r\n    return (\r\n        <div className=\"about__container\">\r\n            <span>\r\n                 About this page: I built it because\r\n            </span>\r\n            <span>- George Orwell, 1984</span>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default About;","import React from 'react';\r\n\r\n class Detail extends React.Component {\r\n     componentDidMount() {\r\n        const { location, history } = this.props;\r\n        if (location.state === undefined) {\r\n            history.push(\"/\");\r\n        }\r\n     }\r\n    render() {\r\n        const { location } = this.props;\r\n        if(location.state) {\r\n            return <span>{location.state.title}</span>\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Navigation.css\";\r\nfunction Navigation() {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\" className=\"nav_link\">Home</Link>\r\n            <Link to=\"/about\" className=\"nav_link\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Navigation;","import React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Navigation />\n            <Route path=\"/\" exact={true} component={Home} />\n            <Route path=\"/about/\" component={About} />\n            <Route path=\"/movie/:id\" component={Detail} />\n        </HashRouter>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport './Potato';\n\nReactDOM.render(<App />, document.getElementById('potato'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}